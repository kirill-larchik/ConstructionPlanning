@model ConstructionPlanning.WebApplication.Models.Project.ProjectViewModel
@{
    var returnUrl = Context.Request.Path;
}

<div class="container">
<h3>Список строительных объектов</h3>

<p>
    <a asp-action="Create" asp-controller="ConstructionObject" asp-route-projectId="@Model.Id" asp-route-returnUrl="@returnUrl" class="btn btn-primary btn-sm">Добавить</a>
</p>
<table class="table table-striped table-sm">
    <thead class="thead-dark">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.ConstructionObjectViewModel.Id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ConstructionObjectViewModel.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ConstructionObjectViewModel.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ConstructionObjectViewModel.TotalCost)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.ConstructionObjects) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Id)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TotalCost)
            </td>
            <td class="float-right">
                @Html.ActionLink("Редактировать", "Edit", "ConstructionObject", new { id=item.Id, returnUrl=returnUrl }, new { @class="btn btn-primary btn-sm" }) |
                @Html.ActionLink("Подробная информация", "Details", "ConstructionObject", new { id=item.Id, returnUrl=returnUrl }, new { @class="btn btn-primary btn-sm" }) |
                @Html.ActionLink("Удалить", "Delete", "ConstructionObject", new { id=item.Id, returnUrl=returnUrl }, new { @class="btn btn-danger btn-sm" })
            </td>
        </tr>
}
    </tbody>
</table>
</div>
