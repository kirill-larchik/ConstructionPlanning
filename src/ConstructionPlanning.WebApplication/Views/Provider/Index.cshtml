@using ConstructionPlanning.WebApplication.Models.Provider
@model ConstructionPlanning.WebApplication.Models.Provider.ProviderIndexViewModel
@{
    ViewData["Title"] = "Список поставщиков";
}

<h1>Список поставщиков</h1>

<p>
    <a asp-action="Create" class="btn btn-primary btn-sm">Добавить нового поставщика</a>
</p>
<table class="table table-striped">
    <thead class="thead-dark">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.ModelForDisplayingNames.Name)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.Providers) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td class="float-right">
                @Html.ActionLink("Редактировать", "Edit", new { id=item.Id }, new { @class="btn btn-primary btn-sm" }) |
                @Html.ActionLink("Подробная информация", "Details", new { id=item.Id }, new { @class="btn btn-primary btn-sm" }) |
                @Html.ActionLink("Удалить", "Delete", new { id=item.Id }, new { @class="btn btn-danger btn-sm" })
            </td>
        </tr>
}
    </tbody>
</table>
@if (Model.PageViewModel.HasPreviousPage)
{
    <a asp-action="Index"
       asp-route-page="@(Model.PageViewModel.PageNumber - 1)"
       class="btn btn-outline-dark">
        <i class="glyphicon glyphicon-chevron-left"></i>
        Назад
    </a>
}
@if (Model.PageViewModel.HasNextPage)
{
    <a asp-action="Index"
       asp-route-page="@(Model.PageViewModel.PageNumber + 1)"
       class="btn btn-outline-dark">
        Вперед
        <i class="glyphicon glyphicon-chevron-right"></i>
    </a>
}
